generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Store {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  userId     String
  products   Product[]
  categories Category[]
  features   Feature[]
  sizes      Size[]
  colours    Colour[]
  materials  Material[]
  billboards Billboard[]
  createdAt  DateTime    @default(now())
}

model Billboard {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  label     String
  imageUrl  String
  store     Store    @relation(fields: [storeId], references: [id])
  storeId   String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  description String
  image       String
  slug        String
  thumbnails  String[]
  store       Store    @relation(fields: [storeId], references: [id])
  storeId     String   @db.ObjectId
  isFeatured  Boolean  @default(false)
  isInStock   Boolean  @default(false)
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String   @db.ObjectId
  feature     Feature  @relation(fields: [featureId], references: [id])
  featureId   String   @db.ObjectId
  size        Size     @relation(fields: [sizeId], references: [id])
  color       Colour   @relation(fields: [colorId], references: [id])
  material    Material @relation(fields: [materialId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  sizeId      String   @db.ObjectId
  colorId     String   @db.ObjectId
  materialId  String   @db.ObjectId
  Image       Image[]
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  slug      String
  store     Store     @relation(fields: [storeId], references: [id])
  storeId   String    @db.ObjectId
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Feature {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  slug      String
  store     Store     @relation(fields: [storeId], references: [id])
  storeId   String    @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Size {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  slug      String
  store     Store     @relation(fields: [storeId], references: [id])
  storeId   String    @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Colour {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  slug         String
  hexColorCode String
  store        Store     @relation(fields: [storeId], references: [id])
  storeId      String    @db.ObjectId
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  Product      Product[]
}

model Material {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  slug      String
  store     Store     @relation(fields: [storeId], references: [id])
  storeId   String    @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl  String
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
